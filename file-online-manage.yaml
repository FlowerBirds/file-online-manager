 # 在k8s中部署file-manage服务
apiVersion: v1
kind: ServiceAccount
metadata:
 name: fmuser

---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
 name: fmuser-role
rules:
 - apiGroups: [""]
   resources: ["pods", "namespaces"]
   verbs: ["get", "list", "watch"]
 - apiGroups: [""]
   resources: ["pods/log"]
   verbs: ["get", "list", "watch"]
 - apiGroups: [""]
   resources: ["pods"]
   verbs: ["delete"]
 - apiGroups: [""]
   resources: ["namespaces"]
   verbs: ["get", "list", "watch"]

---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
 name: fmuser-rolebinding
subjects:
 - kind: ServiceAccount
   name: fmuser
   namespace: default
roleRef:
 kind: ClusterRole
 name: fmuser-role
 apiGroup: rbac.authorization.k8s.io
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: file-manage
  labels:
    app: file-manage
spec:
  replicas: 1
  selector:
    matchLabels:
      app: file-manage
  template:
    metadata:
      labels:
        app: file-manage
    spec:
      serviceAccountName: fmuser
      containers:
      - name: file-manage
        image: flowerbirds/file-manage:latest
        imagePullPolicy: IfNotPresent
        env:
          - name: MANAGE_USERNAME
            valueFrom:
              secretKeyRef:
                name: file-manage-secret
                key: username
          - name: MANAGE_PASSWORD
            valueFrom:
              secretKeyRef:
                name: file-manage-secret
                key: password
          - name: MANAGE_SECURITY
            value: "true"
          - name: EXPIRE_TIME
            value: "24"
          - name: CONTEXT_PATH
            value: "/fm/"
          - name: ROOT_PATH
            value: "/opt"
        ports:
        - containerPort: 8080
        volumeMounts:
        - name: apps
          mountPath: /opt/apps
        - name: file
          mountPath: /opt/file
        - name: resource-home
          mountPath: /opt/resource-home
      volumes:
      - name: apps
        hostPath:
          path: /local/path/to/apps
      - name: file
        hostPath:
          path: /local/path/to/file
      - name: resource-home
        hostPath:
          path: /local/path/to/resource-home
---
apiVersion: v1
kind: Service
metadata:
  name: file-manage
  labels:
    app: file-manage
spec:
  type: NodePort
  ports:
  - port: 8080
    targetPort: 8080
    nodePort: 30001
  selector:
    app: file-manage

---
 apiVersion: v1
 kind: Secret
 metadata:
   name: file-manage-secret
 type: Opaque
 data:
   password: MTIzNDU2
   username: YWRtaW4=

